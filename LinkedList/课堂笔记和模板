
第五章 LinkedList

5.1
注意：1 访问x.next的时候，一定要保证x是非空的
      2 删除一个节点时必须知道这个节点的前继节点，prev.next = prev.next.next
      2 当头节点有可能被操作时，需要用dummy node指向头结点，最后返回dummyNode.next
      
5.2 翻转链表四步法：
 prev-> pos-> x-> x-> x
 
 ListNode temp = pos.next;
 pos.next = prev;
 prev = pos;
 pos = temp;


5.3 快慢指针法找链表中点
  ListNode slow = head, fast = head.next;
  while (fast != null && fast.next != null) {
      fast = fast.next.next;
      slow = slow.next;
  }
  return slow;
  如果节点数为偶数，则slow为第(节点数/2)个节点（即在左半边）。
